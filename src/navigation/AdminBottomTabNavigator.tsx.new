import React from 'react';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import Ionicons from 'react-native-vector-icons/Ionicons';
import { AdminTabsParamList } from './navigation.types';
import { adminTabConfigs, tabBarOptions } from './adminTabConfig';
import { useLanguage } from '../context/LanguageContext';
import AdminProfileScreen from '../screens/admin/AdminProfileScreen'; // âœ… Import manually

const Tab = createBottomTabNavigator<AdminTabsParamList>();

const getTabScreenOptions = ({ route }: { route: any }) => {
  const tabConfig = adminTabConfigs.find(config => config.name === route.name);

  return {
    headerShown: false,
    
    tabBarIcon: ({ color, size }: { color: string; size: number }) => {
      const iconName = tabConfig?.iconName || 'home-outline';
      return <Ionicons name={iconName} size={size} color={color} />;
    },
    
    tabBarActiveTintColor: tabBarOptions.activeTintColor,
    tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,
    tabBarStyle: tabBarOptions.style,
  };
};

interface AdminBottomTabNavigatorProps {
  userName?: string;
  userPhone?: string;
  designation?: string;
  initialScreen?: string;
  initialParams?: any;
}

const AdminBottomTabNavigator: React.FC<AdminBottomTabNavigatorProps> = ({ 
  userName, 
  userPhone, 
  designation,
  initialScreen, 
  initialParams 
}) => {
  const { translate } = useLanguage();
  
  return (
    <Tab.Navigator 
      screenOptions={getTabScreenOptions}
      initialRouteName={initialScreen as keyof AdminTabsParamList}
    >
      {/* âœ… Loop for visible tab screens */}
      {adminTabConfigs.map((tabConfig) => {
        const isInitialScreen = tabConfig.name === initialScreen;
        const screenParams = isInitialScreen 
          ? { userName, userPhone, designation, ...initialParams }
          : { userName, userPhone, designation };
          
        return (
          <Tab.Screen
            key={tabConfig.name}
            name={tabConfig.name}
            component={tabConfig.component}
            initialParams={screenParams}
            options={{
              tabBarLabel: translate(tabConfig.label),
            }}
          />
        );
      })}
      
      {/* âœ… Hidden profile screen that still uses bottom tabs */}
      <Tab.Screen
        name="AdminHome" // Changed from "AdminProfile" to a valid type in AdminTabsParamList
        component={AdminProfileScreen}
        initialParams={{ userName, userPhone, designation }}
        options={{
          tabBarButton: () => null, // ðŸ‘ˆ hides it from bottom tab icons
        }}
      />
    </Tab.Navigator>
  );
};

export default AdminBottomTabNavigator;